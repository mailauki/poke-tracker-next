import { useState, useEffect, useMemo } from 'react'
import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Header from '../components/Header'
import Pokemon from '../components/Pokemon'
import Auth from '../components/Auth'
import { Swiper, SwiperSlide } from 'swiper/react'
import { Navigation } from 'swiper'
import 'swiper/css'
import 'swiper/css/navigation'
import { Box, Button, createTheme, ThemeProvider, CssBaseline, useMediaQuery } from '@mui/material'
import { useSupabaseClient, useSession } from '@supabase/auth-helpers-react'

export default function Home() {
  const [pokemons, setPokemons] = useState([{id: 1}])
  const [checks, setChecks] = useState([])
  const [next, setNext] = useState(null)
  const [open, setOpen] = useState(false)
  const supabase = useSupabaseClient()
  const session = useSession()
  const prefersDarkMode = useMediaQuery("(prefers-color-scheme: dark)")

  const theme = useMemo(
    () => createTheme({
      palette: {
        mode: prefersDarkMode ? "dark" : "light"
      }
    }), [prefersDarkMode]
  )

  useEffect(() => {
    fetch("https://pokeapi.co/api/v2/pokemon?offset=0&limit=9")
    .then((r) => r.json())
    .then((data) => {
      setPokemons(data.results)
      setNext(data.next)
    })
  }, [])

  function append() {
    fetch(next)
    .then((r) => r.json())
    .then((data) => {
      setPokemons([...pokemons, data.results].flat())
      setNext(data.next)
    })
  }

  useEffect(() => {
    getPokemon()
  }, [])

  async function getPokemon() {
    let { data } = await supabase
      .from('pokemon')
      .select('*')

    setChecks(data)
  }
  
  return (
    <ThemeProvider theme={theme}>
      <CssBaseline />

      <div className={styles.container}>
        <Head>
          <title>PokeTracker</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/pokeball-dark.ico" media="(prefers-color-scheme: dark)" />
          <link rel="icon" href="/pokeball-light.ico" media="(prefers-color-scheme: light)" />
          <link rel="icon" href="/pokeball.ico" media="(prefers-color-scheme: no-preference)" />
        </Head>

        <Header open={open} onOpen={setOpen} />

        <main className={styles.main}>
          {!session ? (
            <div style={{ padding: '50px 0 100px 0' }}>
              <Auth />
            </div>
          ) : (
            !open ? (
              <>
                <ul className={styles.grid}>
                  {pokemons.map((pokemon) => (
                    <Box key={pokemon.name} >
                      <Pokemon 
                        pokemon={pokemon} 
                        open={open} 
                        onOpen={(open) => setOpen(open)} 
                        checked={checks.find((check) => pokemon.name === check.name)}
                      />
                    </Box>
                  ))}
                </ul>
                
                <Button 
                  onClick={() => append()} 
                  variant="outlined"
                >
                  Load More
                </Button>
              </>
            ) : (
              <Swiper 
                className={styles.swiper}
                modules={[Navigation]}
                navigation
                onReachEnd={() => append()}
                onSwiper={(swiper) => swiper.slideTo(open-1)}
              >
                {pokemons.map((pokemon) => (
                  <SwiperSlide key={pokemon.name} className={styles.slide}>
                    <Pokemon 
                      pokemon={pokemon} 
                      open={open} 
                      onOpen={(open) => setOpen(open)} 
                    />
                  </SwiperSlide>
                ))}
              </Swiper>
            )
          )}
        </main>
      </div>
    </ThemeProvider>
  )
}
