import React from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import Header from '../components/Header'
import Pokemon from '../components/Pokemon'
import { Swiper, SwiperSlide } from 'swiper/react'
import { Navigation } from 'swiper'
import 'swiper/css'
import 'swiper/css/navigation'
import { createTheme, ThemeProvider, useMediaQuery, CssBaseline } from '@mui/material'

export default function Home() {
  const [pokemons, setPokemons] = React.useState([{id: 1}, {id: 2}, {id: 3}])
  const [next, setNext] = React.useState(null)
  const [open, setOpen] = React.useState(false)
  const prefersDarkMode = useMediaQuery("(prefers-color-scheme: dark)")

  const theme = React.useMemo(
    () => createTheme({
      palette: {
        mode: prefersDarkMode ? "dark" : "light"
      }
    }), [prefersDarkMode]
  )

  React.useEffect(() => {
    fetch("https://pokeapi.co/api/v2/pokemon?offset=0&limit=9")
    .then((r) => r.json())
    .then((data) => {
      setPokemons(data.results)
      setNext(data.next)
    })
  }, [])

  function append() {
    fetch(next)
    .then((r) => r.json())
    .then((data) => {
      setPokemons([...pokemons, data.results].flat())
      setNext(data.next)
    })
  }
  
  return (
    <div className={styles.container}>
      <Head>
        <title>PokeTracker</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/pokeball-dark.ico" media="(prefers-color-scheme: dark)" />
        {/* <link rel="icon" href="/pokeball-dark.png" media="(prefers-color-scheme: dark)" type="image/png" /> */}
        <link rel="icon" href="/pokeball-light.ico" media="(prefers-color-scheme: light)" />
        {/* <link rel="icon" href="/pokeball-light.png" media="(prefers-color-scheme: light)" type="image/png" /> */}
        <link rel="icon" href="/pokeball.ico" media="(prefers-color-scheme: no-preference)" />
        {/* <link rel="icon" href="/pokeball.png" media="(prefers-color-scheme: no-preference)" type="image/png" /> */}
      </Head>

      <Header onOpen={setOpen} />

      <main className={styles.main}>
        {/* <h1>
          <a href="/api/hello">Hello</a>
        </h1> */}

        {!open ? (
          <>
            <ul className={styles.grid}>
              {pokemons.map((pokemon) => (
                <Pokemon 
                  key={pokemon.name} 
                  pokemon={pokemon} 
                  open={open} 
                  onOpen={(open) => setOpen(open)} 
                />
              ))}
            </ul>
            
            <button onClick={() => append()}>Load More</button>
          </>
        ) : (
          <Swiper 
            className={styles.swiper}
            modules={[Navigation]}
            navigation
            onReachEnd={() => append()}
            onSwiper={(swiper) => swiper.slideTo(open-1)}
          >
            {pokemons.map((pokemon) => (
              <SwiperSlide className={styles.slide} key={pokemon.name}>
                <Pokemon 
                  pokemon={pokemon} 
                  open={open} 
                  onOpen={(open) => setOpen(open)} 
                />
              </SwiperSlide>
            ))}
          </Swiper>
        )}
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
